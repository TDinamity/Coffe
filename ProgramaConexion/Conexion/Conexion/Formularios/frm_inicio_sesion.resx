<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tableLayoutPanel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        xEQzHnCEw0Ax5n4y4Y84QmAybmTCE0U//9k=
</value>
  </data>
</root>